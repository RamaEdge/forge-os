#!/bin/sh
# ForgeOS Chrony Init Script
# Implements THE-53 (Networking)

### BEGIN INIT INFO
# Provides:          chronyd
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Chrony time synchronization daemon
# Description:       Start/stop the chrony NTP daemon
### END INIT INFO

CHRONYD="/usr/sbin/chronyd"
PIDFILE="/var/run/chronyd.pid"
CHRONY_CONF="/etc/chrony/chrony.conf"

start() {
    echo "Starting chronyd..."
    
    if [ ! -f "$CHRONY_CONF" ]; then
        echo "Error: Chrony configuration not found: $CHRONY_CONF"
        return 1
    fi
    
    if ! command -v chronyd >/dev/null 2>&1; then
        echo "Warning: chronyd not found, time synchronization not available"
        return 1
    fi
    
    # Create directories
    mkdir -p /var/lib/chrony
    mkdir -p /var/log/chrony
    mkdir -p /var/run
    
    # Set permissions
    chown chrony:chrony /var/lib/chrony /var/log/chrony 2>/dev/null || true
    
    # Start chronyd
    if $CHRONYD -f $CHRONY_CONF -u chrony; then
        echo "chronyd started successfully"
        return 0
    else
        echo "Error: Failed to start chronyd"
        return 1
    fi
}

stop() {
    echo "Stopping chronyd..."
    
    if [ -f "$PIDFILE" ]; then
        kill $(cat "$PIDFILE") 2>/dev/null
        rm -f "$PIDFILE"
    else
        # Try to find and kill by process name
        killall chronyd 2>/dev/null
    fi
    
    echo "chronyd stopped"
    return 0
}

restart() {
    stop
    sleep 1
    start
}

status() {
    if command -v chronyc >/dev/null 2>&1; then
        echo "Chrony status:"
        chronyc tracking
        echo ""
        echo "NTP sources:"
        chronyc sources
    else
        echo "chronyc command not available"
        return 1
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit $?

